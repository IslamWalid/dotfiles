# vim: ft=sh

cmd open ${{
    run() {
        { setsid -f "$@" >/dev/null 2>&1 & } ||
            ({ nohup "$@" >/dev/null 2>&1 & } &) ||
            (exec "$@" >/dev/null 2>&1 &)
    }

    mime_type="$(file -b --mime-type -- "$(readlink -f $f)")"
    selected="$fs"
    if [ ! ${selected} ]; then
        selected="$f"
    fi

    case "$mime_type" in
    image/vnd.djvu | application/pdf | application/postscript | \
        application/pdf | application/epub*)
        run "${READER:-okular}" $selected
        ;;
    text/* | application/json | application/javascript | \
        application/pgp-encrypted | inode/x-empty | application/octet-stream)
        "${EDITOR:-nvim}" ${selected}
        ;;
    image/svg+xml | image/png | image/jpeg | image/gif)
        run "${IMAGE_VIEWER:-sxiv}" $selected
        ;;
    audio/*)
        run "${AUDIO_PLAYER:-"${MPV:-mpv}"}" --force-window --fs=no $selected
        ;;
    video/*)
        run "${VIDEO_PLAYER:-"${MPV:-mpv}"}" --force-window $selected
        ;;
    *)
        for f in $selected; do
            "${OPENER:-mimeopen}" $f
        done
        ;;
    esac
}}

cmd extract ${{
	if [ -f $f ]; then
		case $f in
		*.tar.bz2) tar xjf $f ;;
		*.tar.gz) tar xzf $f ;;
		*.tar.xz) tar xf $f ;;
		*.bz2) bunzip2 $f ;;
		*.rar) unrar x $f ;;
		*.gz) gunzip $f ;;
		*.tar) tar xf $f ;;
		*.tbz2) tar xjf $f ;;
		*.tgz) tar xzf $f ;;
		*.zip) unzip $f ;;
		*.Z) uncompress $f ;;
		*.7z) 7z x $f ;;
		*) echo "'$f' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$f' is not a valid file"
	fi
}}

cmd trash ${{
    trashdir="$HOME/.trash/"
    mkdir -p $trashdir

    selected="$fs"
    if [ ! ${selected} ]; then
        selected="$f"
    fi

    for s in $selected; do
        newname="$trashdir/$(date "+%s").$(basename "$s")"
        mv "$s" "$newname"
    done
}}

cmd pager ${{
    mime_type="$(file -b --mime-type -- "$(readlink -f "$f")")"

    case "$mime_type" in
    text/* | application/json | application/javascript | \
        application/pgp-encrypted | inode/x-empty | application/octet-stream)
        bat --paging=always -p ${f}
        ;;
    application/x-object | application/x-pie-executable)
        objdump -D ${f} | bat --paging=always -p --language=asm
        ;;
    *)
        case "${f}" in
            *.iso)
                iso-info "${f}" | less
                ;;
            *.tar)
                tar tf "${f}" | less
                ;;
            *.tar.gz)
                tar tzf "${f}" | less
                ;;
            *.zip)
                unzip -l "${f}" | less
                ;;
            *)
                exiftool "${f}" | less
                ;;
        esac
    esac
}}

cmd bulk-rename ${{
    old="$(mktemp)"
    new="$(mktemp)"
    if [ -n "$fs" ]; then
        fs="$(basename -a $fs)"
    else
        fs="$(ls)"
    fi
    printf '%s\n' "$fs" >"$old"
    printf '%s\n' "$fs" >"$new"
    $EDITOR "$new"
    [ "$(wc -l < "$new")" -ne "$(wc -l < "$old")" ] && exit
    paste "$old" "$new" | while IFS= read -r names; do
        src="$(printf '%s' "$names" | cut -f1)"
        dst="$(printf '%s' "$names" | cut -f2)"
        if [ "$src" = "$dst" ] || [ -e "$dst" ]; then
            continue
        fi
        mv -- "$src" "$dst"
    done
    rm -- "$old" "$new"
    lf -remote "send $id unselect"
}}
